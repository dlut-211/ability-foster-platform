<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.dlut.ssdut.abilityfosterplatform.mapper.KnowledgeTestMapper">
  <resultMap id="BaseResultMap" type="edu.dlut.ssdut.abilityfosterplatform.model.KnowledgeTest">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="item1" jdbcType="VARCHAR" property="item1" />
    <result column="item2" jdbcType="VARCHAR" property="item2" />
    <result column="item3" jdbcType="VARCHAR" property="item3" />
    <result column="item4" jdbcType="VARCHAR" property="item4" />
    <result column="ans" jdbcType="VARCHAR" property="ans" />
    <result column="knowledge_id" jdbcType="INTEGER" property="knowledgeId" />
    <result column="chapter_id" jdbcType="INTEGER" property="chapterId" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, item1, item2, item3, item4, ans, knowledge_id, chapter_id, course_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from knowledge_test
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from knowledge_test
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.KnowledgeTest">
    insert into knowledge_test (id, name, item1, 
      item2, item3, item4,
      ans, knowledge_id, chapter_id, course_id
      )
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{item1,jdbcType=VARCHAR}, 
      #{item2,jdbcType=VARCHAR}, #{item3,jdbcType=VARCHAR}, #{item4,jdbcType=VARCHAR}, 
      #{ans,jdbcType=VARCHAR}, #{knowledgeId,jdbcType=INTEGER}, #{chapterId,jdbcType=INTEGER},
      #{courseId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.KnowledgeTest">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into knowledge_test
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="name != null">
        name,
      </if>
      <if test="item1 != null">
        item1,
      </if>
      <if test="item2 != null">
        item2,
      </if>
      <if test="item3 != null">
        item3,
      </if>
      <if test="item4 != null">
        item4,
      </if>
      <if test="ans != null">
        ans,
      </if>
      <if test="knowledgeId != null">
        knowledge_id,
      </if>
      <if test="chapterId != null">
        chapter_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="item1 != null">
        #{item1,jdbcType=VARCHAR},
      </if>
      <if test="item2 != null">
        #{item2,jdbcType=VARCHAR},
      </if>
      <if test="item3 != null">
        #{item3,jdbcType=VARCHAR},
      </if>
      <if test="item4 != null">
        #{item4,jdbcType=VARCHAR},
      </if>
      <if test="ans != null">
        #{ans,jdbcType=VARCHAR},
      </if>
      <if test="knowledgeId != null">
        #{knowledgeId,jdbcType=INTEGER},
      </if>
      <if test="chapterId != null">
        #{chapterId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.KnowledgeTest">
    update knowledge_test
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="item1 != null">
        item1 = #{item1,jdbcType=VARCHAR},
      </if>
      <if test="item2 != null">
        item2 = #{item2,jdbcType=VARCHAR},
      </if>
      <if test="item3 != null">
        item3 = #{item3,jdbcType=VARCHAR},
      </if>
      <if test="item4 != null">
        item4 = #{item4,jdbcType=VARCHAR},
      </if>
      <if test="ans != null">
        ans = #{ans,jdbcType=VARCHAR},
      </if>
      <if test="knowledgeId != null">
        knowledge_id = #{knowledgeId,jdbcType=INTEGER},
      </if>
      <if test="chapterId != null">
        chapter_id = #{chapterId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.KnowledgeTest">
    update knowledge_test
    set name = #{name,jdbcType=VARCHAR},
      item1 = #{item1,jdbcType=VARCHAR},
      item2 = #{item2,jdbcType=VARCHAR},
      item3 = #{item3,jdbcType=VARCHAR},
      item4 = #{item4,jdbcType=VARCHAR},
      ans = #{ans,jdbcType=VARCHAR},
      knowledge_id = #{knowledgeId,jdbcType=INTEGER},
      chapter_id = #{chapterId,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="findListByCourseIdAndChapterId" parameterType="java.lang.Integer"
          resultType="edu.dlut.ssdut.abilityfosterplatform.model.KnowledgeTest">
    select
    <include refid="Base_Column_List" />
    from knowledge_test
    where course_id = #{courseId,jdbcType=INTEGER} and chapter_id = #{chapterId,jdbcType=INTEGER}
  </select>

  <select id="getTestByTestIds" resultType="edu.dlut.ssdut.abilityfosterplatform.model.KnowledgeTest">
    select * from knowledge_test where  id in
    <foreach collection="testIds" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </select>

  <select id="findClassWorkInfo" parameterType="java.lang.Integer" resultType="edu.dlut.ssdut.abilityfosterplatform.dto.ClassTestDTO">
    select kt.*,ctr.status,k.name as knowledgeName
    from knowledge_test kt,
         classroom_test_relation ctr,
         knowledge k
    where kt.id = ctr.knowledge_test_id and kt.knowledge_id = k.id
      and kt.chapter_id = #{chapterId,jdbcType=INTEGER}
      and ctr.classroom_id = #{classroomId,jdbcType=INTEGER};
  </select>

</mapper>