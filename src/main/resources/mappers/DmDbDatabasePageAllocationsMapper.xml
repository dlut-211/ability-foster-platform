<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.dlut.ssdut.abilityfosterplatform.mapper.DmDbDatabasePageAllocationsMapper" >
  <resultMap id="BaseResultMap" type="edu.dlut.ssdut.abilityfosterplatform.model.DmDbDatabasePageAllocations" >
    <result column="database_id" property="databaseId" jdbcType="INTEGER" />
    <result column="object_id" property="objectId" jdbcType="INTEGER" />
    <result column="index_id" property="indexId" jdbcType="INTEGER" />
    <result column="partition_id" property="partitionId" jdbcType="INTEGER" />
    <result column="rowset_id" property="rowsetId" jdbcType="BIGINT" />
    <result column="allocation_unit_id" property="allocationUnitId" jdbcType="BIGINT" />
    <result column="allocation_unit_type" property="allocationUnitType" jdbcType="INTEGER" />
    <result column="allocation_unit_type_desc" property="allocationUnitTypeDesc" jdbcType="NVARCHAR" />
    <result column="data_clone_id" property="dataCloneId" jdbcType="INTEGER" />
    <result column="clone_state" property="cloneState" jdbcType="INTEGER" />
    <result column="clone_state_desc" property="cloneStateDesc" jdbcType="NVARCHAR" />
    <result column="extent_file_id" property="extentFileId" jdbcType="SMALLINT" />
    <result column="extent_page_id" property="extentPageId" jdbcType="INTEGER" />
    <result column="allocated_page_iam_file_id" property="allocatedPageIamFileId" jdbcType="SMALLINT" />
    <result column="allocated_page_iam_page_id" property="allocatedPageIamPageId" jdbcType="INTEGER" />
    <result column="allocated_page_file_id" property="allocatedPageFileId" jdbcType="SMALLINT" />
    <result column="allocated_page_page_id" property="allocatedPagePageId" jdbcType="INTEGER" />
    <result column="is_allocated" property="isAllocated" jdbcType="TINYINT" />
    <result column="is_iam_page" property="isIamPage" jdbcType="TINYINT" />
    <result column="is_mixed_page_allocation" property="isMixedPageAllocation" jdbcType="TINYINT" />
    <result column="page_free_space_percent" property="pageFreeSpacePercent" jdbcType="INTEGER" />
    <result column="page_type" property="pageType" jdbcType="INTEGER" />
    <result column="page_type_desc" property="pageTypeDesc" jdbcType="NVARCHAR" />
    <result column="page_level" property="pageLevel" jdbcType="TINYINT" />
    <result column="next_page_file_id" property="nextPageFileId" jdbcType="SMALLINT" />
    <result column="next_page_page_id" property="nextPagePageId" jdbcType="INTEGER" />
    <result column="previous_page_file_id" property="previousPageFileId" jdbcType="SMALLINT" />
    <result column="previous_page_page_id" property="previousPagePageId" jdbcType="INTEGER" />
    <result column="is_page_compressed" property="isPageCompressed" jdbcType="TINYINT" />
    <result column="has_ghost_records" property="hasGhostRecords" jdbcType="TINYINT" />
  </resultMap>
  <insert id="insert" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.DmDbDatabasePageAllocations" >
    insert into dm_db_database_page_allocations (database_id, object_id, index_id, 
      partition_id, rowset_id, allocation_unit_id, 
      allocation_unit_type, allocation_unit_type_desc, 
      data_clone_id, clone_state, clone_state_desc, 
      extent_file_id, extent_page_id, allocated_page_iam_file_id, 
      allocated_page_iam_page_id, allocated_page_file_id, 
      allocated_page_page_id, is_allocated, is_iam_page, 
      is_mixed_page_allocation, page_free_space_percent, 
      page_type, page_type_desc, page_level, 
      next_page_file_id, next_page_page_id, previous_page_file_id, 
      previous_page_page_id, is_page_compressed, has_ghost_records
      )
    values (#{databaseId,jdbcType=INTEGER}, #{objectId,jdbcType=INTEGER}, #{indexId,jdbcType=INTEGER}, 
      #{partitionId,jdbcType=INTEGER}, #{rowsetId,jdbcType=BIGINT}, #{allocationUnitId,jdbcType=BIGINT}, 
      #{allocationUnitType,jdbcType=INTEGER}, #{allocationUnitTypeDesc,jdbcType=NVARCHAR}, 
      #{dataCloneId,jdbcType=INTEGER}, #{cloneState,jdbcType=INTEGER}, #{cloneStateDesc,jdbcType=NVARCHAR}, 
      #{extentFileId,jdbcType=SMALLINT}, #{extentPageId,jdbcType=INTEGER}, #{allocatedPageIamFileId,jdbcType=SMALLINT}, 
      #{allocatedPageIamPageId,jdbcType=INTEGER}, #{allocatedPageFileId,jdbcType=SMALLINT}, 
      #{allocatedPagePageId,jdbcType=INTEGER}, #{isAllocated,jdbcType=TINYINT}, #{isIamPage,jdbcType=TINYINT}, 
      #{isMixedPageAllocation,jdbcType=TINYINT}, #{pageFreeSpacePercent,jdbcType=INTEGER}, 
      #{pageType,jdbcType=INTEGER}, #{pageTypeDesc,jdbcType=NVARCHAR}, #{pageLevel,jdbcType=TINYINT}, 
      #{nextPageFileId,jdbcType=SMALLINT}, #{nextPagePageId,jdbcType=INTEGER}, #{previousPageFileId,jdbcType=SMALLINT}, 
      #{previousPagePageId,jdbcType=INTEGER}, #{isPageCompressed,jdbcType=TINYINT}, #{hasGhostRecords,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.DmDbDatabasePageAllocations" >
    insert into dm_db_database_page_allocations
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="databaseId != null" >
        database_id,
      </if>
      <if test="objectId != null" >
        object_id,
      </if>
      <if test="indexId != null" >
        index_id,
      </if>
      <if test="partitionId != null" >
        partition_id,
      </if>
      <if test="rowsetId != null" >
        rowset_id,
      </if>
      <if test="allocationUnitId != null" >
        allocation_unit_id,
      </if>
      <if test="allocationUnitType != null" >
        allocation_unit_type,
      </if>
      <if test="allocationUnitTypeDesc != null" >
        allocation_unit_type_desc,
      </if>
      <if test="dataCloneId != null" >
        data_clone_id,
      </if>
      <if test="cloneState != null" >
        clone_state,
      </if>
      <if test="cloneStateDesc != null" >
        clone_state_desc,
      </if>
      <if test="extentFileId != null" >
        extent_file_id,
      </if>
      <if test="extentPageId != null" >
        extent_page_id,
      </if>
      <if test="allocatedPageIamFileId != null" >
        allocated_page_iam_file_id,
      </if>
      <if test="allocatedPageIamPageId != null" >
        allocated_page_iam_page_id,
      </if>
      <if test="allocatedPageFileId != null" >
        allocated_page_file_id,
      </if>
      <if test="allocatedPagePageId != null" >
        allocated_page_page_id,
      </if>
      <if test="isAllocated != null" >
        is_allocated,
      </if>
      <if test="isIamPage != null" >
        is_iam_page,
      </if>
      <if test="isMixedPageAllocation != null" >
        is_mixed_page_allocation,
      </if>
      <if test="pageFreeSpacePercent != null" >
        page_free_space_percent,
      </if>
      <if test="pageType != null" >
        page_type,
      </if>
      <if test="pageTypeDesc != null" >
        page_type_desc,
      </if>
      <if test="pageLevel != null" >
        page_level,
      </if>
      <if test="nextPageFileId != null" >
        next_page_file_id,
      </if>
      <if test="nextPagePageId != null" >
        next_page_page_id,
      </if>
      <if test="previousPageFileId != null" >
        previous_page_file_id,
      </if>
      <if test="previousPagePageId != null" >
        previous_page_page_id,
      </if>
      <if test="isPageCompressed != null" >
        is_page_compressed,
      </if>
      <if test="hasGhostRecords != null" >
        has_ghost_records,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="databaseId != null" >
        #{databaseId,jdbcType=INTEGER},
      </if>
      <if test="objectId != null" >
        #{objectId,jdbcType=INTEGER},
      </if>
      <if test="indexId != null" >
        #{indexId,jdbcType=INTEGER},
      </if>
      <if test="partitionId != null" >
        #{partitionId,jdbcType=INTEGER},
      </if>
      <if test="rowsetId != null" >
        #{rowsetId,jdbcType=BIGINT},
      </if>
      <if test="allocationUnitId != null" >
        #{allocationUnitId,jdbcType=BIGINT},
      </if>
      <if test="allocationUnitType != null" >
        #{allocationUnitType,jdbcType=INTEGER},
      </if>
      <if test="allocationUnitTypeDesc != null" >
        #{allocationUnitTypeDesc,jdbcType=NVARCHAR},
      </if>
      <if test="dataCloneId != null" >
        #{dataCloneId,jdbcType=INTEGER},
      </if>
      <if test="cloneState != null" >
        #{cloneState,jdbcType=INTEGER},
      </if>
      <if test="cloneStateDesc != null" >
        #{cloneStateDesc,jdbcType=NVARCHAR},
      </if>
      <if test="extentFileId != null" >
        #{extentFileId,jdbcType=SMALLINT},
      </if>
      <if test="extentPageId != null" >
        #{extentPageId,jdbcType=INTEGER},
      </if>
      <if test="allocatedPageIamFileId != null" >
        #{allocatedPageIamFileId,jdbcType=SMALLINT},
      </if>
      <if test="allocatedPageIamPageId != null" >
        #{allocatedPageIamPageId,jdbcType=INTEGER},
      </if>
      <if test="allocatedPageFileId != null" >
        #{allocatedPageFileId,jdbcType=SMALLINT},
      </if>
      <if test="allocatedPagePageId != null" >
        #{allocatedPagePageId,jdbcType=INTEGER},
      </if>
      <if test="isAllocated != null" >
        #{isAllocated,jdbcType=TINYINT},
      </if>
      <if test="isIamPage != null" >
        #{isIamPage,jdbcType=TINYINT},
      </if>
      <if test="isMixedPageAllocation != null" >
        #{isMixedPageAllocation,jdbcType=TINYINT},
      </if>
      <if test="pageFreeSpacePercent != null" >
        #{pageFreeSpacePercent,jdbcType=INTEGER},
      </if>
      <if test="pageType != null" >
        #{pageType,jdbcType=INTEGER},
      </if>
      <if test="pageTypeDesc != null" >
        #{pageTypeDesc,jdbcType=NVARCHAR},
      </if>
      <if test="pageLevel != null" >
        #{pageLevel,jdbcType=TINYINT},
      </if>
      <if test="nextPageFileId != null" >
        #{nextPageFileId,jdbcType=SMALLINT},
      </if>
      <if test="nextPagePageId != null" >
        #{nextPagePageId,jdbcType=INTEGER},
      </if>
      <if test="previousPageFileId != null" >
        #{previousPageFileId,jdbcType=SMALLINT},
      </if>
      <if test="previousPagePageId != null" >
        #{previousPagePageId,jdbcType=INTEGER},
      </if>
      <if test="isPageCompressed != null" >
        #{isPageCompressed,jdbcType=TINYINT},
      </if>
      <if test="hasGhostRecords != null" >
        #{hasGhostRecords,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
</mapper>