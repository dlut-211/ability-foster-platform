<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.dlut.ssdut.abilityfosterplatform.mapper.DmExecQueryStatsMapper" >
  <resultMap id="BaseResultMap" type="edu.dlut.ssdut.abilityfosterplatform.model.DmExecQueryStats" >
    <result column="statement_start_offset" property="statementStartOffset" jdbcType="INTEGER" />
    <result column="statement_end_offset" property="statementEndOffset" jdbcType="INTEGER" />
    <result column="plan_generation_num" property="planGenerationNum" jdbcType="BIGINT" />
    <result column="creation_time" property="creationTime" jdbcType="TIMESTAMP" />
    <result column="last_execution_time" property="lastExecutionTime" jdbcType="TIMESTAMP" />
    <result column="execution_count" property="executionCount" jdbcType="BIGINT" />
    <result column="total_worker_time" property="totalWorkerTime" jdbcType="BIGINT" />
    <result column="last_worker_time" property="lastWorkerTime" jdbcType="BIGINT" />
    <result column="min_worker_time" property="minWorkerTime" jdbcType="BIGINT" />
    <result column="max_worker_time" property="maxWorkerTime" jdbcType="BIGINT" />
    <result column="total_physical_reads" property="totalPhysicalReads" jdbcType="BIGINT" />
    <result column="last_physical_reads" property="lastPhysicalReads" jdbcType="BIGINT" />
    <result column="min_physical_reads" property="minPhysicalReads" jdbcType="BIGINT" />
    <result column="max_physical_reads" property="maxPhysicalReads" jdbcType="BIGINT" />
    <result column="total_logical_writes" property="totalLogicalWrites" jdbcType="BIGINT" />
    <result column="last_logical_writes" property="lastLogicalWrites" jdbcType="BIGINT" />
    <result column="min_logical_writes" property="minLogicalWrites" jdbcType="BIGINT" />
    <result column="max_logical_writes" property="maxLogicalWrites" jdbcType="BIGINT" />
    <result column="total_logical_reads" property="totalLogicalReads" jdbcType="BIGINT" />
    <result column="last_logical_reads" property="lastLogicalReads" jdbcType="BIGINT" />
    <result column="min_logical_reads" property="minLogicalReads" jdbcType="BIGINT" />
    <result column="max_logical_reads" property="maxLogicalReads" jdbcType="BIGINT" />
    <result column="total_clr_time" property="totalClrTime" jdbcType="BIGINT" />
    <result column="last_clr_time" property="lastClrTime" jdbcType="BIGINT" />
    <result column="min_clr_time" property="minClrTime" jdbcType="BIGINT" />
    <result column="max_clr_time" property="maxClrTime" jdbcType="BIGINT" />
    <result column="total_elapsed_time" property="totalElapsedTime" jdbcType="BIGINT" />
    <result column="last_elapsed_time" property="lastElapsedTime" jdbcType="BIGINT" />
    <result column="min_elapsed_time" property="minElapsedTime" jdbcType="BIGINT" />
    <result column="max_elapsed_time" property="maxElapsedTime" jdbcType="BIGINT" />
    <result column="total_rows" property="totalRows" jdbcType="BIGINT" />
    <result column="last_rows" property="lastRows" jdbcType="BIGINT" />
    <result column="min_rows" property="minRows" jdbcType="BIGINT" />
    <result column="max_rows" property="maxRows" jdbcType="BIGINT" />
    <result column="statement_context_id" property="statementContextId" jdbcType="BIGINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="edu.dlut.ssdut.abilityfosterplatform.model.DmExecQueryStatsWithBLOBs" extends="BaseResultMap" >
    <result column="sql_handle" property="sqlHandle" jdbcType="VARBINARY" />
    <result column="plan_handle" property="planHandle" jdbcType="VARBINARY" />
    <result column="query_hash" property="queryHash" jdbcType="BINARY" />
    <result column="query_plan_hash" property="queryPlanHash" jdbcType="BINARY" />
    <result column="statement_sql_handle" property="statementSqlHandle" jdbcType="VARBINARY" />
  </resultMap>
  <sql id="Blob_Column_List" >
    sql_handle, plan_handle, query_hash, query_plan_hash, statement_sql_handle
  </sql>
  <insert id="insert" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.DmExecQueryStatsWithBLOBs" >
    insert into dm_exec_query_stats (statement_start_offset, statement_end_offset, 
      plan_generation_num, creation_time, last_execution_time, 
      execution_count, total_worker_time, last_worker_time, 
      min_worker_time, max_worker_time, total_physical_reads, 
      last_physical_reads, min_physical_reads, max_physical_reads, 
      total_logical_writes, last_logical_writes, min_logical_writes, 
      max_logical_writes, total_logical_reads, last_logical_reads, 
      min_logical_reads, max_logical_reads, total_clr_time, 
      last_clr_time, min_clr_time, max_clr_time, 
      total_elapsed_time, last_elapsed_time, min_elapsed_time, 
      max_elapsed_time, total_rows, last_rows, 
      min_rows, max_rows, statement_context_id, 
      sql_handle, plan_handle, query_hash, 
      query_plan_hash, statement_sql_handle)
    values (#{statementStartOffset,jdbcType=INTEGER}, #{statementEndOffset,jdbcType=INTEGER}, 
      #{planGenerationNum,jdbcType=BIGINT}, #{creationTime,jdbcType=TIMESTAMP}, #{lastExecutionTime,jdbcType=TIMESTAMP}, 
      #{executionCount,jdbcType=BIGINT}, #{totalWorkerTime,jdbcType=BIGINT}, #{lastWorkerTime,jdbcType=BIGINT}, 
      #{minWorkerTime,jdbcType=BIGINT}, #{maxWorkerTime,jdbcType=BIGINT}, #{totalPhysicalReads,jdbcType=BIGINT}, 
      #{lastPhysicalReads,jdbcType=BIGINT}, #{minPhysicalReads,jdbcType=BIGINT}, #{maxPhysicalReads,jdbcType=BIGINT}, 
      #{totalLogicalWrites,jdbcType=BIGINT}, #{lastLogicalWrites,jdbcType=BIGINT}, #{minLogicalWrites,jdbcType=BIGINT}, 
      #{maxLogicalWrites,jdbcType=BIGINT}, #{totalLogicalReads,jdbcType=BIGINT}, #{lastLogicalReads,jdbcType=BIGINT}, 
      #{minLogicalReads,jdbcType=BIGINT}, #{maxLogicalReads,jdbcType=BIGINT}, #{totalClrTime,jdbcType=BIGINT}, 
      #{lastClrTime,jdbcType=BIGINT}, #{minClrTime,jdbcType=BIGINT}, #{maxClrTime,jdbcType=BIGINT}, 
      #{totalElapsedTime,jdbcType=BIGINT}, #{lastElapsedTime,jdbcType=BIGINT}, #{minElapsedTime,jdbcType=BIGINT}, 
      #{maxElapsedTime,jdbcType=BIGINT}, #{totalRows,jdbcType=BIGINT}, #{lastRows,jdbcType=BIGINT}, 
      #{minRows,jdbcType=BIGINT}, #{maxRows,jdbcType=BIGINT}, #{statementContextId,jdbcType=BIGINT}, 
      #{sqlHandle,jdbcType=VARBINARY}, #{planHandle,jdbcType=VARBINARY}, #{queryHash,jdbcType=BINARY}, 
      #{queryPlanHash,jdbcType=BINARY}, #{statementSqlHandle,jdbcType=VARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.DmExecQueryStatsWithBLOBs" >
    insert into dm_exec_query_stats
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="statementStartOffset != null" >
        statement_start_offset,
      </if>
      <if test="statementEndOffset != null" >
        statement_end_offset,
      </if>
      <if test="planGenerationNum != null" >
        plan_generation_num,
      </if>
      <if test="creationTime != null" >
        creation_time,
      </if>
      <if test="lastExecutionTime != null" >
        last_execution_time,
      </if>
      <if test="executionCount != null" >
        execution_count,
      </if>
      <if test="totalWorkerTime != null" >
        total_worker_time,
      </if>
      <if test="lastWorkerTime != null" >
        last_worker_time,
      </if>
      <if test="minWorkerTime != null" >
        min_worker_time,
      </if>
      <if test="maxWorkerTime != null" >
        max_worker_time,
      </if>
      <if test="totalPhysicalReads != null" >
        total_physical_reads,
      </if>
      <if test="lastPhysicalReads != null" >
        last_physical_reads,
      </if>
      <if test="minPhysicalReads != null" >
        min_physical_reads,
      </if>
      <if test="maxPhysicalReads != null" >
        max_physical_reads,
      </if>
      <if test="totalLogicalWrites != null" >
        total_logical_writes,
      </if>
      <if test="lastLogicalWrites != null" >
        last_logical_writes,
      </if>
      <if test="minLogicalWrites != null" >
        min_logical_writes,
      </if>
      <if test="maxLogicalWrites != null" >
        max_logical_writes,
      </if>
      <if test="totalLogicalReads != null" >
        total_logical_reads,
      </if>
      <if test="lastLogicalReads != null" >
        last_logical_reads,
      </if>
      <if test="minLogicalReads != null" >
        min_logical_reads,
      </if>
      <if test="maxLogicalReads != null" >
        max_logical_reads,
      </if>
      <if test="totalClrTime != null" >
        total_clr_time,
      </if>
      <if test="lastClrTime != null" >
        last_clr_time,
      </if>
      <if test="minClrTime != null" >
        min_clr_time,
      </if>
      <if test="maxClrTime != null" >
        max_clr_time,
      </if>
      <if test="totalElapsedTime != null" >
        total_elapsed_time,
      </if>
      <if test="lastElapsedTime != null" >
        last_elapsed_time,
      </if>
      <if test="minElapsedTime != null" >
        min_elapsed_time,
      </if>
      <if test="maxElapsedTime != null" >
        max_elapsed_time,
      </if>
      <if test="totalRows != null" >
        total_rows,
      </if>
      <if test="lastRows != null" >
        last_rows,
      </if>
      <if test="minRows != null" >
        min_rows,
      </if>
      <if test="maxRows != null" >
        max_rows,
      </if>
      <if test="statementContextId != null" >
        statement_context_id,
      </if>
      <if test="sqlHandle != null" >
        sql_handle,
      </if>
      <if test="planHandle != null" >
        plan_handle,
      </if>
      <if test="queryHash != null" >
        query_hash,
      </if>
      <if test="queryPlanHash != null" >
        query_plan_hash,
      </if>
      <if test="statementSqlHandle != null" >
        statement_sql_handle,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="statementStartOffset != null" >
        #{statementStartOffset,jdbcType=INTEGER},
      </if>
      <if test="statementEndOffset != null" >
        #{statementEndOffset,jdbcType=INTEGER},
      </if>
      <if test="planGenerationNum != null" >
        #{planGenerationNum,jdbcType=BIGINT},
      </if>
      <if test="creationTime != null" >
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastExecutionTime != null" >
        #{lastExecutionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="executionCount != null" >
        #{executionCount,jdbcType=BIGINT},
      </if>
      <if test="totalWorkerTime != null" >
        #{totalWorkerTime,jdbcType=BIGINT},
      </if>
      <if test="lastWorkerTime != null" >
        #{lastWorkerTime,jdbcType=BIGINT},
      </if>
      <if test="minWorkerTime != null" >
        #{minWorkerTime,jdbcType=BIGINT},
      </if>
      <if test="maxWorkerTime != null" >
        #{maxWorkerTime,jdbcType=BIGINT},
      </if>
      <if test="totalPhysicalReads != null" >
        #{totalPhysicalReads,jdbcType=BIGINT},
      </if>
      <if test="lastPhysicalReads != null" >
        #{lastPhysicalReads,jdbcType=BIGINT},
      </if>
      <if test="minPhysicalReads != null" >
        #{minPhysicalReads,jdbcType=BIGINT},
      </if>
      <if test="maxPhysicalReads != null" >
        #{maxPhysicalReads,jdbcType=BIGINT},
      </if>
      <if test="totalLogicalWrites != null" >
        #{totalLogicalWrites,jdbcType=BIGINT},
      </if>
      <if test="lastLogicalWrites != null" >
        #{lastLogicalWrites,jdbcType=BIGINT},
      </if>
      <if test="minLogicalWrites != null" >
        #{minLogicalWrites,jdbcType=BIGINT},
      </if>
      <if test="maxLogicalWrites != null" >
        #{maxLogicalWrites,jdbcType=BIGINT},
      </if>
      <if test="totalLogicalReads != null" >
        #{totalLogicalReads,jdbcType=BIGINT},
      </if>
      <if test="lastLogicalReads != null" >
        #{lastLogicalReads,jdbcType=BIGINT},
      </if>
      <if test="minLogicalReads != null" >
        #{minLogicalReads,jdbcType=BIGINT},
      </if>
      <if test="maxLogicalReads != null" >
        #{maxLogicalReads,jdbcType=BIGINT},
      </if>
      <if test="totalClrTime != null" >
        #{totalClrTime,jdbcType=BIGINT},
      </if>
      <if test="lastClrTime != null" >
        #{lastClrTime,jdbcType=BIGINT},
      </if>
      <if test="minClrTime != null" >
        #{minClrTime,jdbcType=BIGINT},
      </if>
      <if test="maxClrTime != null" >
        #{maxClrTime,jdbcType=BIGINT},
      </if>
      <if test="totalElapsedTime != null" >
        #{totalElapsedTime,jdbcType=BIGINT},
      </if>
      <if test="lastElapsedTime != null" >
        #{lastElapsedTime,jdbcType=BIGINT},
      </if>
      <if test="minElapsedTime != null" >
        #{minElapsedTime,jdbcType=BIGINT},
      </if>
      <if test="maxElapsedTime != null" >
        #{maxElapsedTime,jdbcType=BIGINT},
      </if>
      <if test="totalRows != null" >
        #{totalRows,jdbcType=BIGINT},
      </if>
      <if test="lastRows != null" >
        #{lastRows,jdbcType=BIGINT},
      </if>
      <if test="minRows != null" >
        #{minRows,jdbcType=BIGINT},
      </if>
      <if test="maxRows != null" >
        #{maxRows,jdbcType=BIGINT},
      </if>
      <if test="statementContextId != null" >
        #{statementContextId,jdbcType=BIGINT},
      </if>
      <if test="sqlHandle != null" >
        #{sqlHandle,jdbcType=VARBINARY},
      </if>
      <if test="planHandle != null" >
        #{planHandle,jdbcType=VARBINARY},
      </if>
      <if test="queryHash != null" >
        #{queryHash,jdbcType=BINARY},
      </if>
      <if test="queryPlanHash != null" >
        #{queryPlanHash,jdbcType=BINARY},
      </if>
      <if test="statementSqlHandle != null" >
        #{statementSqlHandle,jdbcType=VARBINARY},
      </if>
    </trim>
  </insert>
</mapper>