<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.dlut.ssdut.abilityfosterplatform.mapper.XmlSchemaModelGroupsMapper" >
  <resultMap id="BaseResultMap" type="edu.dlut.ssdut.abilityfosterplatform.model.XmlSchemaModelGroups" >
    <result column="xml_component_id" property="xmlComponentId" jdbcType="INTEGER" />
    <result column="xml_collection_id" property="xmlCollectionId" jdbcType="INTEGER" />
    <result column="xml_namespace_id" property="xmlNamespaceId" jdbcType="INTEGER" />
    <result column="is_qualified" property="isQualified" jdbcType="BIT" />
    <result column="name" property="name" jdbcType="NVARCHAR" />
    <result column="symbol_space" property="symbolSpace" jdbcType="CHAR" />
    <result column="symbol_space_desc" property="symbolSpaceDesc" jdbcType="NVARCHAR" />
    <result column="kind" property="kind" jdbcType="CHAR" />
    <result column="kind_desc" property="kindDesc" jdbcType="NVARCHAR" />
    <result column="derivation" property="derivation" jdbcType="CHAR" />
    <result column="derivation_desc" property="derivationDesc" jdbcType="NVARCHAR" />
    <result column="base_xml_component_id" property="baseXmlComponentId" jdbcType="INTEGER" />
    <result column="scoping_xml_component_id" property="scopingXmlComponentId" jdbcType="INTEGER" />
    <result column="compositor" property="compositor" jdbcType="CHAR" />
    <result column="compositor_desc" property="compositorDesc" jdbcType="NVARCHAR" />
  </resultMap>
  <insert id="insert" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.XmlSchemaModelGroups" >
    insert into xml_schema_model_groups (xml_component_id, xml_collection_id, 
      xml_namespace_id, is_qualified, name, 
      symbol_space, symbol_space_desc, kind, 
      kind_desc, derivation, derivation_desc, 
      base_xml_component_id, scoping_xml_component_id, 
      compositor, compositor_desc)
    values (#{xmlComponentId,jdbcType=INTEGER}, #{xmlCollectionId,jdbcType=INTEGER}, 
      #{xmlNamespaceId,jdbcType=INTEGER}, #{isQualified,jdbcType=BIT}, #{name,jdbcType=NVARCHAR}, 
      #{symbolSpace,jdbcType=CHAR}, #{symbolSpaceDesc,jdbcType=NVARCHAR}, #{kind,jdbcType=CHAR}, 
      #{kindDesc,jdbcType=NVARCHAR}, #{derivation,jdbcType=CHAR}, #{derivationDesc,jdbcType=NVARCHAR}, 
      #{baseXmlComponentId,jdbcType=INTEGER}, #{scopingXmlComponentId,jdbcType=INTEGER}, 
      #{compositor,jdbcType=CHAR}, #{compositorDesc,jdbcType=NVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.XmlSchemaModelGroups" >
    insert into xml_schema_model_groups
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="xmlComponentId != null" >
        xml_component_id,
      </if>
      <if test="xmlCollectionId != null" >
        xml_collection_id,
      </if>
      <if test="xmlNamespaceId != null" >
        xml_namespace_id,
      </if>
      <if test="isQualified != null" >
        is_qualified,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="symbolSpace != null" >
        symbol_space,
      </if>
      <if test="symbolSpaceDesc != null" >
        symbol_space_desc,
      </if>
      <if test="kind != null" >
        kind,
      </if>
      <if test="kindDesc != null" >
        kind_desc,
      </if>
      <if test="derivation != null" >
        derivation,
      </if>
      <if test="derivationDesc != null" >
        derivation_desc,
      </if>
      <if test="baseXmlComponentId != null" >
        base_xml_component_id,
      </if>
      <if test="scopingXmlComponentId != null" >
        scoping_xml_component_id,
      </if>
      <if test="compositor != null" >
        compositor,
      </if>
      <if test="compositorDesc != null" >
        compositor_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="xmlComponentId != null" >
        #{xmlComponentId,jdbcType=INTEGER},
      </if>
      <if test="xmlCollectionId != null" >
        #{xmlCollectionId,jdbcType=INTEGER},
      </if>
      <if test="xmlNamespaceId != null" >
        #{xmlNamespaceId,jdbcType=INTEGER},
      </if>
      <if test="isQualified != null" >
        #{isQualified,jdbcType=BIT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=NVARCHAR},
      </if>
      <if test="symbolSpace != null" >
        #{symbolSpace,jdbcType=CHAR},
      </if>
      <if test="symbolSpaceDesc != null" >
        #{symbolSpaceDesc,jdbcType=NVARCHAR},
      </if>
      <if test="kind != null" >
        #{kind,jdbcType=CHAR},
      </if>
      <if test="kindDesc != null" >
        #{kindDesc,jdbcType=NVARCHAR},
      </if>
      <if test="derivation != null" >
        #{derivation,jdbcType=CHAR},
      </if>
      <if test="derivationDesc != null" >
        #{derivationDesc,jdbcType=NVARCHAR},
      </if>
      <if test="baseXmlComponentId != null" >
        #{baseXmlComponentId,jdbcType=INTEGER},
      </if>
      <if test="scopingXmlComponentId != null" >
        #{scopingXmlComponentId,jdbcType=INTEGER},
      </if>
      <if test="compositor != null" >
        #{compositor,jdbcType=CHAR},
      </if>
      <if test="compositorDesc != null" >
        #{compositorDesc,jdbcType=NVARCHAR},
      </if>
    </trim>
  </insert>
</mapper>