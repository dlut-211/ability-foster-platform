<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.dlut.ssdut.abilityfosterplatform.mapper.DmOsMemoryAllocationsMapper" >
  <resultMap id="BaseResultMap" type="edu.dlut.ssdut.abilityfosterplatform.model.DmOsMemoryAllocations" >
    <result column="size_in_bytes" property="sizeInBytes" jdbcType="BIGINT" />
    <result column="creation_time" property="creationTime" jdbcType="TIMESTAMP" />
    <result column="memory_node_id" property="memoryNodeId" jdbcType="SMALLINT" />
    <result column="source_file" property="sourceFile" jdbcType="VARCHAR" />
    <result column="line_num" property="lineNum" jdbcType="INTEGER" />
    <result column="sequence_num" property="sequenceNum" jdbcType="INTEGER" />
    <result column="tag" property="tag" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="edu.dlut.ssdut.abilityfosterplatform.model.DmOsMemoryAllocationsWithBLOBs" extends="BaseResultMap" >
    <result column="memory_allocation_address" property="memoryAllocationAddress" jdbcType="VARBINARY" />
    <result column="memory_object_address" property="memoryObjectAddress" jdbcType="VARBINARY" />
    <result column="allocator_stack_address" property="allocatorStackAddress" jdbcType="VARBINARY" />
  </resultMap>
  <sql id="Blob_Column_List" >
    memory_allocation_address, memory_object_address, allocator_stack_address
  </sql>
  <insert id="insert" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.DmOsMemoryAllocationsWithBLOBs" >
    insert into dm_os_memory_allocations (size_in_bytes, creation_time, memory_node_id, 
      source_file, line_num, sequence_num, 
      tag, memory_allocation_address, memory_object_address, 
      allocator_stack_address)
    values (#{sizeInBytes,jdbcType=BIGINT}, #{creationTime,jdbcType=TIMESTAMP}, #{memoryNodeId,jdbcType=SMALLINT}, 
      #{sourceFile,jdbcType=VARCHAR}, #{lineNum,jdbcType=INTEGER}, #{sequenceNum,jdbcType=INTEGER}, 
      #{tag,jdbcType=INTEGER}, #{memoryAllocationAddress,jdbcType=VARBINARY}, #{memoryObjectAddress,jdbcType=VARBINARY}, 
      #{allocatorStackAddress,jdbcType=VARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.DmOsMemoryAllocationsWithBLOBs" >
    insert into dm_os_memory_allocations
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sizeInBytes != null" >
        size_in_bytes,
      </if>
      <if test="creationTime != null" >
        creation_time,
      </if>
      <if test="memoryNodeId != null" >
        memory_node_id,
      </if>
      <if test="sourceFile != null" >
        source_file,
      </if>
      <if test="lineNum != null" >
        line_num,
      </if>
      <if test="sequenceNum != null" >
        sequence_num,
      </if>
      <if test="tag != null" >
        tag,
      </if>
      <if test="memoryAllocationAddress != null" >
        memory_allocation_address,
      </if>
      <if test="memoryObjectAddress != null" >
        memory_object_address,
      </if>
      <if test="allocatorStackAddress != null" >
        allocator_stack_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sizeInBytes != null" >
        #{sizeInBytes,jdbcType=BIGINT},
      </if>
      <if test="creationTime != null" >
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memoryNodeId != null" >
        #{memoryNodeId,jdbcType=SMALLINT},
      </if>
      <if test="sourceFile != null" >
        #{sourceFile,jdbcType=VARCHAR},
      </if>
      <if test="lineNum != null" >
        #{lineNum,jdbcType=INTEGER},
      </if>
      <if test="sequenceNum != null" >
        #{sequenceNum,jdbcType=INTEGER},
      </if>
      <if test="tag != null" >
        #{tag,jdbcType=INTEGER},
      </if>
      <if test="memoryAllocationAddress != null" >
        #{memoryAllocationAddress,jdbcType=VARBINARY},
      </if>
      <if test="memoryObjectAddress != null" >
        #{memoryObjectAddress,jdbcType=VARBINARY},
      </if>
      <if test="allocatorStackAddress != null" >
        #{allocatorStackAddress,jdbcType=VARBINARY},
      </if>
    </trim>
  </insert>
</mapper>