<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.dlut.ssdut.abilityfosterplatform.mapper.CourseMapper" >
  <resultMap id="BaseResultMap" type="edu.dlut.ssdut.abilityfosterplatform.model.Course" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="syllabus" property="syllabus" jdbcType="VARCHAR" />
    <result column="syllabus_path" property="syllabusPath" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="subject_id" property="subjectId" jdbcType="INTEGER" />
    <result column="created_by" property="createdBy" jdbcType="INTEGER" />
    <result column="created_on" property="createdOn" jdbcType="TIMESTAMP" />
    <result column="modified_by" property="modifiedBy" jdbcType="INTEGER" />
    <result column="modified_on" property="modifiedOn" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, code, name, syllabus, syllabus_path, description, subject_id, created_by, created_on, 
    modified_by, modified_on
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.Course" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course (id, code, name, 
      syllabus, syllabus_path, description, 
      subject_id, created_by, created_on, 
      modified_by, modified_on)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{syllabus,jdbcType=VARCHAR}, #{syllabusPath,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{subjectId,jdbcType=INTEGER}, #{createdBy,jdbcType=INTEGER}, #{createdOn,jdbcType=TIMESTAMP}, 
      #{modifiedBy,jdbcType=INTEGER}, #{modifiedOn,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.Course" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      <if test="code != null" >
        code,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="syllabus != null" >
        syllabus,
      </if>
      <if test="syllabusPath != null" >
        syllabus_path,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="subjectId != null" >
        subject_id,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="createdOn != null" >
        created_on,
      </if>
      <if test="modifiedBy != null" >
        modified_by,
      </if>
      <if test="modifiedOn != null" >
        modified_on,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=INTEGER},
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="syllabus != null" >
        #{syllabus,jdbcType=VARCHAR},
      </if>
      <if test="syllabusPath != null" >
        #{syllabusPath,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="subjectId != null" >
        #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="createdOn != null" >
        #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null" >
        #{modifiedBy,jdbcType=INTEGER},
      </if>
      <if test="modifiedOn != null" >
        #{modifiedOn,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.Course" >
    update course
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="syllabus != null" >
        syllabus = #{syllabus,jdbcType=VARCHAR},
      </if>
      <if test="syllabusPath != null" >
        syllabus_path = #{syllabusPath,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="subjectId != null" >
        subject_id = #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="createdOn != null" >
        created_on = #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null" >
        modified_by = #{modifiedBy,jdbcType=INTEGER},
      </if>
      <if test="modifiedOn != null" >
        modified_on = #{modifiedOn,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.Course" >
    update course
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      syllabus = #{syllabus,jdbcType=VARCHAR},
      syllabus_path = #{syllabusPath,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      subject_id = #{subjectId,jdbcType=INTEGER},
      created_by = #{createdBy,jdbcType=INTEGER},
      created_on = #{createdOn,jdbcType=TIMESTAMP},
      modified_by = #{modifiedBy,jdbcType=INTEGER},
      modified_on = #{modifiedOn,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>