<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.dlut.ssdut.abilityfosterplatform.mapper.ClassroomTestRelationMapper">
  <resultMap id="BaseResultMap" type="edu.dlut.ssdut.abilityfosterplatform.model.ClassroomTestRelation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="classroom_id" jdbcType="INTEGER" property="classroomId" />
    <result column="knowledge_test_id" jdbcType="BIGINT" property="knowledgeTestId" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, classroom_id, knowledge_test_id, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from classroom_test_relation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from classroom_test_relation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.ClassroomTestRelation">
    insert into classroom_test_relation (id, classroom_id, knowledge_test_id, 
      status)
    values (#{id,jdbcType=INTEGER}, #{classroomId,jdbcType=INTEGER}, #{knowledgeTestId,jdbcType=BIGINT}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.ClassroomTestRelation">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into classroom_test_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="classroomId != null">
        classroom_id,
      </if>
      <if test="knowledgeTestId != null">
        knowledge_test_id,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=INTEGER},
      <if test="classroomId != null">
        #{classroomId,jdbcType=INTEGER},
      </if>
      <if test="knowledgeTestId != null">
        #{knowledgeTestId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.ClassroomTestRelation">
    update classroom_test_relation
    <set>
      <if test="classroomId != null">
        classroom_id = #{classroomId,jdbcType=INTEGER},
      </if>
      <if test="knowledgeTestId != null">
        knowledge_test_id = #{knowledgeTestId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.ClassroomTestRelation">
    update classroom_test_relation
    set classroom_id = #{classroomId,jdbcType=INTEGER},
      knowledge_test_id = #{knowledgeTestId,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getTestByClassroomId" resultType="java.lang.Integer">
    select knowledge_test_id from classroom_test_relation where classroom_id = #{classroomId} and status = 1
  </select>
  <insert id="insertClassroomRelationList">
    insert into classroom_test_relation(classroom_id,knowledge_test_id,status) VALUES
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.classroomId},#{item.knowledgeTestId},#{item.status})
    </foreach>
  </insert>

  <update id="updateByClassIdAndkId" parameterType="int">
    update classroom_test_relation
    set status = 1
    where classroom_id = #{classroomId,jdbcType=INTEGER}
      and knowledge_test_id = #{knowledgeTestId,jdbcType=INTEGER};
  </update>

  <update id="rollback" parameterType="int">
    update classroom_test_relation
    set status = 0
    where classroom_id = #{classroomId,jdbcType=INTEGER}
      and knowledge_test_id = #{knowledgeTestId,jdbcType=INTEGER};
  </update>

  <select id="getCountTestWork" parameterType="int" resultType="int">
    select count(*) as count
    from classroom_test_relation
    where status = 1
      and classroom_id = #{classroomId,jdbcType=INTEGER};
  </select>
</mapper>