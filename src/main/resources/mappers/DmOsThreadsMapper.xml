<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.dlut.ssdut.abilityfosterplatform.mapper.DmOsThreadsMapper" >
  <resultMap id="BaseResultMap" type="edu.dlut.ssdut.abilityfosterplatform.model.DmOsThreads" >
    <result column="started_by_sqlservr" property="startedBySqlservr" jdbcType="BIT" />
    <result column="os_thread_id" property="osThreadId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="creation_time" property="creationTime" jdbcType="TIMESTAMP" />
    <result column="kernel_time" property="kernelTime" jdbcType="BIGINT" />
    <result column="usermode_time" property="usermodeTime" jdbcType="BIGINT" />
    <result column="stack_bytes_committed" property="stackBytesCommitted" jdbcType="INTEGER" />
    <result column="stack_bytes_used" property="stackBytesUsed" jdbcType="INTEGER" />
    <result column="affinity" property="affinity" jdbcType="BIGINT" />
    <result column="priority" property="priority" jdbcType="INTEGER" />
    <result column="locale" property="locale" jdbcType="INTEGER" />
    <result column="is_impersonating" property="isImpersonating" jdbcType="INTEGER" />
    <result column="is_waiting_on_loader_lock" property="isWaitingOnLoaderLock" jdbcType="INTEGER" />
    <result column="processor_group" property="processorGroup" jdbcType="SMALLINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="edu.dlut.ssdut.abilityfosterplatform.model.DmOsThreadsWithBLOBs" extends="BaseResultMap" >
    <result column="thread_address" property="threadAddress" jdbcType="VARBINARY" />
    <result column="instruction_address" property="instructionAddress" jdbcType="VARBINARY" />
    <result column="stack_base_address" property="stackBaseAddress" jdbcType="VARBINARY" />
    <result column="stack_end_address" property="stackEndAddress" jdbcType="VARBINARY" />
    <result column="token" property="token" jdbcType="VARBINARY" />
    <result column="fiber_data" property="fiberData" jdbcType="VARBINARY" />
    <result column="thread_handle" property="threadHandle" jdbcType="VARBINARY" />
    <result column="event_handle" property="eventHandle" jdbcType="VARBINARY" />
    <result column="scheduler_address" property="schedulerAddress" jdbcType="VARBINARY" />
    <result column="worker_address" property="workerAddress" jdbcType="VARBINARY" />
    <result column="fiber_context_address" property="fiberContextAddress" jdbcType="VARBINARY" />
    <result column="self_address" property="selfAddress" jdbcType="VARBINARY" />
  </resultMap>
  <sql id="Blob_Column_List" >
    thread_address, instruction_address, stack_base_address, stack_end_address, token, 
    fiber_data, thread_handle, event_handle, scheduler_address, worker_address, fiber_context_address, 
    self_address
  </sql>
  <insert id="insert" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.DmOsThreadsWithBLOBs" >
    insert into dm_os_threads (started_by_sqlservr, os_thread_id, status, 
      creation_time, kernel_time, usermode_time, 
      stack_bytes_committed, stack_bytes_used, affinity, 
      priority, locale, is_impersonating, 
      is_waiting_on_loader_lock, processor_group, 
      thread_address, instruction_address, 
      stack_base_address, stack_end_address, 
      token, fiber_data, thread_handle, 
      event_handle, scheduler_address, worker_address, 
      fiber_context_address, self_address)
    values (#{startedBySqlservr,jdbcType=BIT}, #{osThreadId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{creationTime,jdbcType=TIMESTAMP}, #{kernelTime,jdbcType=BIGINT}, #{usermodeTime,jdbcType=BIGINT}, 
      #{stackBytesCommitted,jdbcType=INTEGER}, #{stackBytesUsed,jdbcType=INTEGER}, #{affinity,jdbcType=BIGINT}, 
      #{priority,jdbcType=INTEGER}, #{locale,jdbcType=INTEGER}, #{isImpersonating,jdbcType=INTEGER}, 
      #{isWaitingOnLoaderLock,jdbcType=INTEGER}, #{processorGroup,jdbcType=SMALLINT}, 
      #{threadAddress,jdbcType=VARBINARY}, #{instructionAddress,jdbcType=VARBINARY}, 
      #{stackBaseAddress,jdbcType=VARBINARY}, #{stackEndAddress,jdbcType=VARBINARY}, 
      #{token,jdbcType=VARBINARY}, #{fiberData,jdbcType=VARBINARY}, #{threadHandle,jdbcType=VARBINARY}, 
      #{eventHandle,jdbcType=VARBINARY}, #{schedulerAddress,jdbcType=VARBINARY}, #{workerAddress,jdbcType=VARBINARY}, 
      #{fiberContextAddress,jdbcType=VARBINARY}, #{selfAddress,jdbcType=VARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.DmOsThreadsWithBLOBs" >
    insert into dm_os_threads
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="startedBySqlservr != null" >
        started_by_sqlservr,
      </if>
      <if test="osThreadId != null" >
        os_thread_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="creationTime != null" >
        creation_time,
      </if>
      <if test="kernelTime != null" >
        kernel_time,
      </if>
      <if test="usermodeTime != null" >
        usermode_time,
      </if>
      <if test="stackBytesCommitted != null" >
        stack_bytes_committed,
      </if>
      <if test="stackBytesUsed != null" >
        stack_bytes_used,
      </if>
      <if test="affinity != null" >
        affinity,
      </if>
      <if test="priority != null" >
        priority,
      </if>
      <if test="locale != null" >
        locale,
      </if>
      <if test="isImpersonating != null" >
        is_impersonating,
      </if>
      <if test="isWaitingOnLoaderLock != null" >
        is_waiting_on_loader_lock,
      </if>
      <if test="processorGroup != null" >
        processor_group,
      </if>
      <if test="threadAddress != null" >
        thread_address,
      </if>
      <if test="instructionAddress != null" >
        instruction_address,
      </if>
      <if test="stackBaseAddress != null" >
        stack_base_address,
      </if>
      <if test="stackEndAddress != null" >
        stack_end_address,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="fiberData != null" >
        fiber_data,
      </if>
      <if test="threadHandle != null" >
        thread_handle,
      </if>
      <if test="eventHandle != null" >
        event_handle,
      </if>
      <if test="schedulerAddress != null" >
        scheduler_address,
      </if>
      <if test="workerAddress != null" >
        worker_address,
      </if>
      <if test="fiberContextAddress != null" >
        fiber_context_address,
      </if>
      <if test="selfAddress != null" >
        self_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="startedBySqlservr != null" >
        #{startedBySqlservr,jdbcType=BIT},
      </if>
      <if test="osThreadId != null" >
        #{osThreadId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null" >
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="kernelTime != null" >
        #{kernelTime,jdbcType=BIGINT},
      </if>
      <if test="usermodeTime != null" >
        #{usermodeTime,jdbcType=BIGINT},
      </if>
      <if test="stackBytesCommitted != null" >
        #{stackBytesCommitted,jdbcType=INTEGER},
      </if>
      <if test="stackBytesUsed != null" >
        #{stackBytesUsed,jdbcType=INTEGER},
      </if>
      <if test="affinity != null" >
        #{affinity,jdbcType=BIGINT},
      </if>
      <if test="priority != null" >
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="locale != null" >
        #{locale,jdbcType=INTEGER},
      </if>
      <if test="isImpersonating != null" >
        #{isImpersonating,jdbcType=INTEGER},
      </if>
      <if test="isWaitingOnLoaderLock != null" >
        #{isWaitingOnLoaderLock,jdbcType=INTEGER},
      </if>
      <if test="processorGroup != null" >
        #{processorGroup,jdbcType=SMALLINT},
      </if>
      <if test="threadAddress != null" >
        #{threadAddress,jdbcType=VARBINARY},
      </if>
      <if test="instructionAddress != null" >
        #{instructionAddress,jdbcType=VARBINARY},
      </if>
      <if test="stackBaseAddress != null" >
        #{stackBaseAddress,jdbcType=VARBINARY},
      </if>
      <if test="stackEndAddress != null" >
        #{stackEndAddress,jdbcType=VARBINARY},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARBINARY},
      </if>
      <if test="fiberData != null" >
        #{fiberData,jdbcType=VARBINARY},
      </if>
      <if test="threadHandle != null" >
        #{threadHandle,jdbcType=VARBINARY},
      </if>
      <if test="eventHandle != null" >
        #{eventHandle,jdbcType=VARBINARY},
      </if>
      <if test="schedulerAddress != null" >
        #{schedulerAddress,jdbcType=VARBINARY},
      </if>
      <if test="workerAddress != null" >
        #{workerAddress,jdbcType=VARBINARY},
      </if>
      <if test="fiberContextAddress != null" >
        #{fiberContextAddress,jdbcType=VARBINARY},
      </if>
      <if test="selfAddress != null" >
        #{selfAddress,jdbcType=VARBINARY},
      </if>
    </trim>
  </insert>
</mapper>