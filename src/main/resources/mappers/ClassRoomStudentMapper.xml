<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.dlut.ssdut.abilityfosterplatform.mapper.ClassRoomStudentMapper" >
  <resultMap id="BaseResultMap" type="edu.dlut.ssdut.abilityfosterplatform.model.ClassRoomStudent" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="ClassRoomId" property="classroomid" jdbcType="INTEGER" />
    <result column="CreatedBy" property="createdby" jdbcType="INTEGER" />
    <result column="CreatedOn" property="createdon" jdbcType="TIMESTAMP" />
    <result column="ModifiedBy" property="modifiedby" jdbcType="INTEGER" />
    <result column="ModifiedOn" property="modifiedon" jdbcType="TIMESTAMP" />
    <result column="StudentId" property="studentid" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="edu.dlut.ssdut.abilityfosterplatform.model.ClassRoomStudent" extends="BaseResultMap" >
    <result column="VersionNumber" property="versionnumber" jdbcType="BINARY" />
  </resultMap>
  <sql id="Base_Column_List" >
    Id, ClassRoomId, CreatedBy, CreatedOn, ModifiedBy, ModifiedOn, StudentId
  </sql>
  <sql id="Blob_Column_List" >
    VersionNumber
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ClassRoomStudent
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ClassRoomStudent
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.ClassRoomStudent" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into ClassRoomStudent (ClassRoomId, CreatedBy, CreatedOn, 
      ModifiedBy, ModifiedOn, StudentId, 
      VersionNumber)
    values (#{classroomid,jdbcType=INTEGER}, #{createdby,jdbcType=INTEGER}, #{createdon,jdbcType=TIMESTAMP}, 
      #{modifiedby,jdbcType=INTEGER}, #{modifiedon,jdbcType=TIMESTAMP}, #{studentid,jdbcType=INTEGER}, 
      #{versionnumber,jdbcType=BINARY})
  </insert>
  <insert id="insertSelective" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.ClassRoomStudent" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into ClassRoomStudent
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="classroomid != null" >
        ClassRoomId,
      </if>
      <if test="createdby != null" >
        CreatedBy,
      </if>
      <if test="createdon != null" >
        CreatedOn,
      </if>
      <if test="modifiedby != null" >
        ModifiedBy,
      </if>
      <if test="modifiedon != null" >
        ModifiedOn,
      </if>
      <if test="studentid != null" >
        StudentId,
      </if>
      <if test="versionnumber != null" >
        VersionNumber,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="classroomid != null" >
        #{classroomid,jdbcType=INTEGER},
      </if>
      <if test="createdby != null" >
        #{createdby,jdbcType=INTEGER},
      </if>
      <if test="createdon != null" >
        #{createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedby != null" >
        #{modifiedby,jdbcType=INTEGER},
      </if>
      <if test="modifiedon != null" >
        #{modifiedon,jdbcType=TIMESTAMP},
      </if>
      <if test="studentid != null" >
        #{studentid,jdbcType=INTEGER},
      </if>
      <if test="versionnumber != null" >
        #{versionnumber,jdbcType=BINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.ClassRoomStudent" >
    update ClassRoomStudent
    <set >
      <if test="classroomid != null" >
        ClassRoomId = #{classroomid,jdbcType=INTEGER},
      </if>
      <if test="createdby != null" >
        CreatedBy = #{createdby,jdbcType=INTEGER},
      </if>
      <if test="createdon != null" >
        CreatedOn = #{createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedby != null" >
        ModifiedBy = #{modifiedby,jdbcType=INTEGER},
      </if>
      <if test="modifiedon != null" >
        ModifiedOn = #{modifiedon,jdbcType=TIMESTAMP},
      </if>
      <if test="studentid != null" >
        StudentId = #{studentid,jdbcType=INTEGER},
      </if>
      <if test="versionnumber != null" >
        VersionNumber = #{versionnumber,jdbcType=BINARY},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.ClassRoomStudent" >
    update ClassRoomStudent
    set ClassRoomId = #{classroomid,jdbcType=INTEGER},
      CreatedBy = #{createdby,jdbcType=INTEGER},
      CreatedOn = #{createdon,jdbcType=TIMESTAMP},
      ModifiedBy = #{modifiedby,jdbcType=INTEGER},
      ModifiedOn = #{modifiedon,jdbcType=TIMESTAMP},
      StudentId = #{studentid,jdbcType=INTEGER},
      VersionNumber = #{versionnumber,jdbcType=BINARY}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.ClassRoomStudent" >
    update ClassRoomStudent
    set ClassRoomId = #{classroomid,jdbcType=INTEGER},
      CreatedBy = #{createdby,jdbcType=INTEGER},
      CreatedOn = #{createdon,jdbcType=TIMESTAMP},
      ModifiedBy = #{modifiedby,jdbcType=INTEGER},
      ModifiedOn = #{modifiedon,jdbcType=TIMESTAMP},
      StudentId = #{studentid,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>