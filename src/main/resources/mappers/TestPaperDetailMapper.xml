<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.dlut.ssdut.abilityfosterplatform.mapper.TestPaperDetailMapper" >
  <resultMap id="BaseResultMap" type="edu.dlut.ssdut.abilityfosterplatform.model.TestPaperDetail" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="detail_number" property="detailNumber" jdbcType="INTEGER" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="test_paper_id" property="testPaperId" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="detail_type" property="detailType" jdbcType="INTEGER" />
    <result column="created_by" property="createdBy" jdbcType="INTEGER" />
    <result column="created_on" property="createdOn" jdbcType="TIMESTAMP" />
    <result column="modified_by" property="modifiedBy" jdbcType="INTEGER" />
    <result column="modified_on" property="modifiedOn" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, detail_number, score, test_paper_id, title, detail_type, created_by, created_on, 
    modified_by, modified_on
  </sql>
  <select id="getTestPaperDetailOrder" resultMap="BaseResultMap">
    select id,detail_number,Score
    from test_paper_detail
    where detail_type = #{detailType} and test_paper_id = #{testPaperId}
  </select>
  <select id="getQuestionsNumber" resultType="java.lang.Integer">
    select count(Id)
    from test_paper_detail
    where test_paper_id = #{testPaperId} And detail_type =1
  </select>
  <select id="getTestPaperDetailListA" resultType="edu.dlut.ssdut.abilityfosterplatform.dto.TestPaperListDetailDTO">
    SELECT test_paper_detail.detail_number as detailNumber,'A卷' as detailTypeName,detail_type as detailType,test_paper_detail.id as Id,score,test_paper_detail.test_paper_id as testPaperId,test_paper_detail.title as title,GROUP_CONCAT(title,'(',test_paper_detail_knowledge.weight*100,'%)') as knowledgeName
FROM  test_paper_detail left outer  join   test_paper_detail_knowledge on test_paper_detail_knowledge.test_paper_detail_id=test_paper_detail.id left join knowledge k on test_paper_detail_knowledge.knowledge_id = k.id
  where test_paper_detail.detail_type =1 and test_paper_id = #{test_paper_id}
    GROUP BY test_paper_detail.id;
  </select>
  <select id="getTestPaperDetailListB" resultType="edu.dlut.ssdut.abilityfosterplatform.dto.TestPaperListDetailDTO">
    SELECT test_paper_detail.detail_number as detailNumber,'B卷' as detailTypeName,detail_type as detailType,test_paper_detail.id as Id,score,test_paper_detail.test_paper_id as testPaperId,test_paper_detail.title as title,GROUP_CONCAT(title,'(',test_paper_detail_knowledge.weight*100,'%)') as knowledgeName
FROM  test_paper_detail left outer  join   test_paper_detail_knowledge on test_paper_detail_knowledge.test_paper_detail_id=test_paper_detail.id left join knowledge k on test_paper_detail_knowledge.knowledge_id = k.id
  where test_paper_detail.detail_type =2 and test_paper_id = #{test_paper_id}
    GROUP BY test_paper_detail.id;
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from test_paper_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from test_paper_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.TestPaperDetail" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into test_paper_detail (id, detail_number, score, 
      test_paper_id, title, detail_type, 
      created_by, created_on, modified_by, 
      modified_on)
    values (#{id,jdbcType=INTEGER}, #{detailNumber,jdbcType=INTEGER}, #{score,jdbcType=INTEGER}, 
      #{testPaperId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{detailType,jdbcType=INTEGER}, 
      #{createdBy,jdbcType=INTEGER}, #{createdOn,jdbcType=TIMESTAMP}, #{modifiedBy,jdbcType=INTEGER}, 
      #{modifiedOn,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.TestPaperDetail" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into test_paper_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      <if test="detailNumber != null" >
        detail_number,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="testPaperId != null" >
        test_paper_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="detailType != null" >
        detail_type,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="createdOn != null" >
        created_on,
      </if>
      <if test="modifiedBy != null" >
        modified_by,
      </if>
      <if test="modifiedOn != null" >
        modified_on,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=INTEGER},
      <if test="detailNumber != null" >
        #{detailNumber,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="testPaperId != null" >
        #{testPaperId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="detailType != null" >
        #{detailType,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="createdOn != null" >
        #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null" >
        #{modifiedBy,jdbcType=INTEGER},
      </if>
      <if test="modifiedOn != null" >
        #{modifiedOn,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.TestPaperDetail" >
    update test_paper_detail
    <set >
      <if test="detailNumber != null" >
        detail_number = #{detailNumber,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="testPaperId != null" >
        test_paper_id = #{testPaperId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="detailType != null" >
        detail_type = #{detailType,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="createdOn != null" >
        created_on = #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null" >
        modified_by = #{modifiedBy,jdbcType=INTEGER},
      </if>
      <if test="modifiedOn != null" >
        modified_on = #{modifiedOn,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.TestPaperDetail" >
    update test_paper_detail
    set detail_number = #{detailNumber,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      test_paper_id = #{testPaperId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      detail_type = #{detailType,jdbcType=INTEGER},
      created_by = #{createdBy,jdbcType=INTEGER},
      created_on = #{createdOn,jdbcType=TIMESTAMP},
      modified_by = #{modifiedBy,jdbcType=INTEGER},
      modified_on = #{modifiedOn,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>