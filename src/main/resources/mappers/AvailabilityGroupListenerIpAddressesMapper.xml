<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.dlut.ssdut.abilityfosterplatform.mapper.AvailabilityGroupListenerIpAddressesMapper" >
  <resultMap id="BaseResultMap" type="edu.dlut.ssdut.abilityfosterplatform.model.AvailabilityGroupListenerIpAddresses" >
    <result column="listener_id" property="listenerId" jdbcType="NVARCHAR" />
    <result column="ip_address" property="ipAddress" jdbcType="NVARCHAR" />
    <result column="ip_subnet_mask" property="ipSubnetMask" jdbcType="NVARCHAR" />
    <result column="is_dhcp" property="isDhcp" jdbcType="BIT" />
    <result column="network_subnet_ip" property="networkSubnetIp" jdbcType="NVARCHAR" />
    <result column="network_subnet_prefix_length" property="networkSubnetPrefixLength" jdbcType="INTEGER" />
    <result column="network_subnet_ipv4_mask" property="networkSubnetIpv4Mask" jdbcType="NVARCHAR" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="state_desc" property="stateDesc" jdbcType="NVARCHAR" />
  </resultMap>
  <insert id="insert" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.AvailabilityGroupListenerIpAddresses" >
    insert into availability_group_listener_ip_addresses (listener_id, ip_address, ip_subnet_mask, 
      is_dhcp, network_subnet_ip, network_subnet_prefix_length, 
      network_subnet_ipv4_mask, state, state_desc
      )
    values (#{listenerId,jdbcType=NVARCHAR}, #{ipAddress,jdbcType=NVARCHAR}, #{ipSubnetMask,jdbcType=NVARCHAR}, 
      #{isDhcp,jdbcType=BIT}, #{networkSubnetIp,jdbcType=NVARCHAR}, #{networkSubnetPrefixLength,jdbcType=INTEGER}, 
      #{networkSubnetIpv4Mask,jdbcType=NVARCHAR}, #{state,jdbcType=TINYINT}, #{stateDesc,jdbcType=NVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.AvailabilityGroupListenerIpAddresses" >
    insert into availability_group_listener_ip_addresses
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="listenerId != null" >
        listener_id,
      </if>
      <if test="ipAddress != null" >
        ip_address,
      </if>
      <if test="ipSubnetMask != null" >
        ip_subnet_mask,
      </if>
      <if test="isDhcp != null" >
        is_dhcp,
      </if>
      <if test="networkSubnetIp != null" >
        network_subnet_ip,
      </if>
      <if test="networkSubnetPrefixLength != null" >
        network_subnet_prefix_length,
      </if>
      <if test="networkSubnetIpv4Mask != null" >
        network_subnet_ipv4_mask,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="stateDesc != null" >
        state_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="listenerId != null" >
        #{listenerId,jdbcType=NVARCHAR},
      </if>
      <if test="ipAddress != null" >
        #{ipAddress,jdbcType=NVARCHAR},
      </if>
      <if test="ipSubnetMask != null" >
        #{ipSubnetMask,jdbcType=NVARCHAR},
      </if>
      <if test="isDhcp != null" >
        #{isDhcp,jdbcType=BIT},
      </if>
      <if test="networkSubnetIp != null" >
        #{networkSubnetIp,jdbcType=NVARCHAR},
      </if>
      <if test="networkSubnetPrefixLength != null" >
        #{networkSubnetPrefixLength,jdbcType=INTEGER},
      </if>
      <if test="networkSubnetIpv4Mask != null" >
        #{networkSubnetIpv4Mask,jdbcType=NVARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="stateDesc != null" >
        #{stateDesc,jdbcType=NVARCHAR},
      </if>
    </trim>
  </insert>
</mapper>