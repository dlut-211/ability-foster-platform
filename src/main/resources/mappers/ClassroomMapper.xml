<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.dlut.ssdut.abilityfosterplatform.mapper.ClassroomMapper" >
  <resultMap id="BaseResultMap" type="edu.dlut.ssdut.abilityfosterplatform.model.Classroom" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="begin_date" property="beginDate" jdbcType="TIMESTAMP" />
    <result column="course_id" property="courseId" jdbcType="INTEGER" />
    <result column="end_date" property="endDate" jdbcType="TIMESTAMP" />
    <result column="term_type" property="termType" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="daily_performance_weight" property="dailyPerformanceWeight" jdbcType="DECIMAL" />
    <result column="test_performance_weight" property="testPerformanceWeight" jdbcType="DECIMAL" />
    <result column="created_by" property="createdBy" jdbcType="INTEGER" />
    <result column="created_on" property="createdOn" jdbcType="TIMESTAMP" />
    <result column="modified_by" property="modifiedBy" jdbcType="INTEGER" />
    <result column="modified_on" property="modifiedOn" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, begin_date, course_id, end_date, term_type, name, status, daily_performance_weight, 
    test_performance_weight, created_by, created_on, modified_by, modified_on
  </sql>
  <update id="editStatus" >
    update classroom
    set status = #{Status,jdbcType=INTEGER}
    where id = #{Id,jdbcType=INTEGER}
  </update>

  <select id="getClassroomList" resultMap="BaseResultMap">
            select id, begin_date, course_id, end_date, term_type, name, status, daily_performance_weight,
  test_performance_weight,created_by, created_on, modified_by, modified_on
  from classroom
</select>

  <select id="selectClassroomByCid" resultMap="BaseResultMap">
    select classroom.id, begin_date, end_date, term_type, classroom.name, status, course_id,daily_performance_weight,
  test_performance_weight,course.id c_id, course.name c_name, code, course.description,syllabus,syllabus_path
    from classroom  join course on classroom.course_id= course.id
    where classroom.id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from classroom
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="getCourseId" resultType="java.lang.Integer">
      select course_id from classroom where id = #{classroomId}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from classroom
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.Classroom" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into classroom (begin_date, course_id,
      end_date, term_type, name, 
      status, daily_performance_weight, test_performance_weight, 
      created_by, created_on)
    values (#{beginDate,jdbcType=TIMESTAMP}, #{courseId,jdbcType=INTEGER},
      #{endDate,jdbcType=TIMESTAMP}, #{termType,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{dailyPerformanceWeight,jdbcType=DECIMAL}, #{testPerformanceWeight,jdbcType=DECIMAL}, 
      #{createdBy,jdbcType=INTEGER}, #{createdOn,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.Classroom" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into classroom
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      <if test="beginDate != null" >
        begin_date,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="termType != null" >
        term_type,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="dailyPerformanceWeight != null" >
        daily_performance_weight,
      </if>
      <if test="testPerformanceWeight != null" >
        test_performance_weight,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="createdOn != null" >
        created_on,
      </if>
      <if test="modifiedBy != null" >
        modified_by,
      </if>
      <if test="modifiedOn != null" >
        modified_on,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=INTEGER},
      <if test="beginDate != null" >
        #{beginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="termType != null" >
        #{termType,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="dailyPerformanceWeight != null" >
        #{dailyPerformanceWeight,jdbcType=DECIMAL},
      </if>
      <if test="testPerformanceWeight != null" >
        #{testPerformanceWeight,jdbcType=DECIMAL},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="createdOn != null" >
        #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null" >
        #{modifiedBy,jdbcType=INTEGER},
      </if>
      <if test="modifiedOn != null" >
        #{modifiedOn,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.Classroom" >
    update classroom
    <set >
      <if test="beginDate != null" >
        begin_date = #{beginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="termType != null" >
        term_type = #{termType,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="dailyPerformanceWeight != null" >
        daily_performance_weight = #{dailyPerformanceWeight,jdbcType=DECIMAL},
      </if>
      <if test="testPerformanceWeight != null" >
        test_performance_weight = #{testPerformanceWeight,jdbcType=DECIMAL},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="createdOn != null" >
        created_on = #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null" >
        modified_by = #{modifiedBy,jdbcType=INTEGER},
      </if>
      <if test="modifiedOn != null" >
        modified_on = #{modifiedOn,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.Classroom" >
    update classroom
    set begin_date = #{beginDate,jdbcType=TIMESTAMP},
      course_id = #{courseId,jdbcType=INTEGER},
      end_date = #{endDate,jdbcType=TIMESTAMP},
      term_type = #{termType,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      daily_performance_weight = #{dailyPerformanceWeight,jdbcType=DECIMAL},
      test_performance_weight = #{testPerformanceWeight,jdbcType=DECIMAL},
      created_by = #{createdBy,jdbcType=INTEGER},
      created_on = #{createdOn,jdbcType=TIMESTAMP},
      modified_by = #{modifiedBy,jdbcType=INTEGER},
      modified_on = #{modifiedOn,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>