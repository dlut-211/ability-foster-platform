<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.dlut.ssdut.abilityfosterplatform.mapper.DmExecQueryMemoryGrantsMapper" >
  <resultMap id="BaseResultMap" type="edu.dlut.ssdut.abilityfosterplatform.model.DmExecQueryMemoryGrants" >
    <result column="session_id" property="sessionId" jdbcType="SMALLINT" />
    <result column="request_id" property="requestId" jdbcType="INTEGER" />
    <result column="scheduler_id" property="schedulerId" jdbcType="INTEGER" />
    <result column="dop" property="dop" jdbcType="SMALLINT" />
    <result column="request_time" property="requestTime" jdbcType="TIMESTAMP" />
    <result column="grant_time" property="grantTime" jdbcType="TIMESTAMP" />
    <result column="requested_memory_kb" property="requestedMemoryKb" jdbcType="BIGINT" />
    <result column="granted_memory_kb" property="grantedMemoryKb" jdbcType="BIGINT" />
    <result column="required_memory_kb" property="requiredMemoryKb" jdbcType="BIGINT" />
    <result column="used_memory_kb" property="usedMemoryKb" jdbcType="BIGINT" />
    <result column="max_used_memory_kb" property="maxUsedMemoryKb" jdbcType="BIGINT" />
    <result column="query_cost" property="queryCost" jdbcType="DOUBLE" />
    <result column="timeout_sec" property="timeoutSec" jdbcType="INTEGER" />
    <result column="resource_semaphore_id" property="resourceSemaphoreId" jdbcType="SMALLINT" />
    <result column="queue_id" property="queueId" jdbcType="SMALLINT" />
    <result column="wait_order" property="waitOrder" jdbcType="INTEGER" />
    <result column="is_next_candidate" property="isNextCandidate" jdbcType="BIT" />
    <result column="wait_time_ms" property="waitTimeMs" jdbcType="BIGINT" />
    <result column="group_id" property="groupId" jdbcType="INTEGER" />
    <result column="pool_id" property="poolId" jdbcType="INTEGER" />
    <result column="is_small" property="isSmall" jdbcType="BIT" />
    <result column="ideal_memory_kb" property="idealMemoryKb" jdbcType="BIGINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="edu.dlut.ssdut.abilityfosterplatform.model.DmExecQueryMemoryGrantsWithBLOBs" extends="BaseResultMap" >
    <result column="plan_handle" property="planHandle" jdbcType="VARBINARY" />
    <result column="sql_handle" property="sqlHandle" jdbcType="VARBINARY" />
  </resultMap>
  <sql id="Blob_Column_List" >
    plan_handle, sql_handle
  </sql>
  <insert id="insert" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.DmExecQueryMemoryGrantsWithBLOBs" >
    insert into dm_exec_query_memory_grants (session_id, request_id, scheduler_id, 
      dop, request_time, grant_time, 
      requested_memory_kb, granted_memory_kb, required_memory_kb, 
      used_memory_kb, max_used_memory_kb, query_cost, 
      timeout_sec, resource_semaphore_id, queue_id, 
      wait_order, is_next_candidate, wait_time_ms, 
      group_id, pool_id, is_small, 
      ideal_memory_kb, plan_handle, sql_handle
      )
    values (#{sessionId,jdbcType=SMALLINT}, #{requestId,jdbcType=INTEGER}, #{schedulerId,jdbcType=INTEGER}, 
      #{dop,jdbcType=SMALLINT}, #{requestTime,jdbcType=TIMESTAMP}, #{grantTime,jdbcType=TIMESTAMP}, 
      #{requestedMemoryKb,jdbcType=BIGINT}, #{grantedMemoryKb,jdbcType=BIGINT}, #{requiredMemoryKb,jdbcType=BIGINT}, 
      #{usedMemoryKb,jdbcType=BIGINT}, #{maxUsedMemoryKb,jdbcType=BIGINT}, #{queryCost,jdbcType=DOUBLE}, 
      #{timeoutSec,jdbcType=INTEGER}, #{resourceSemaphoreId,jdbcType=SMALLINT}, #{queueId,jdbcType=SMALLINT}, 
      #{waitOrder,jdbcType=INTEGER}, #{isNextCandidate,jdbcType=BIT}, #{waitTimeMs,jdbcType=BIGINT}, 
      #{groupId,jdbcType=INTEGER}, #{poolId,jdbcType=INTEGER}, #{isSmall,jdbcType=BIT}, 
      #{idealMemoryKb,jdbcType=BIGINT}, #{planHandle,jdbcType=VARBINARY}, #{sqlHandle,jdbcType=VARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.DmExecQueryMemoryGrantsWithBLOBs" >
    insert into dm_exec_query_memory_grants
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sessionId != null" >
        session_id,
      </if>
      <if test="requestId != null" >
        request_id,
      </if>
      <if test="schedulerId != null" >
        scheduler_id,
      </if>
      <if test="dop != null" >
        dop,
      </if>
      <if test="requestTime != null" >
        request_time,
      </if>
      <if test="grantTime != null" >
        grant_time,
      </if>
      <if test="requestedMemoryKb != null" >
        requested_memory_kb,
      </if>
      <if test="grantedMemoryKb != null" >
        granted_memory_kb,
      </if>
      <if test="requiredMemoryKb != null" >
        required_memory_kb,
      </if>
      <if test="usedMemoryKb != null" >
        used_memory_kb,
      </if>
      <if test="maxUsedMemoryKb != null" >
        max_used_memory_kb,
      </if>
      <if test="queryCost != null" >
        query_cost,
      </if>
      <if test="timeoutSec != null" >
        timeout_sec,
      </if>
      <if test="resourceSemaphoreId != null" >
        resource_semaphore_id,
      </if>
      <if test="queueId != null" >
        queue_id,
      </if>
      <if test="waitOrder != null" >
        wait_order,
      </if>
      <if test="isNextCandidate != null" >
        is_next_candidate,
      </if>
      <if test="waitTimeMs != null" >
        wait_time_ms,
      </if>
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="poolId != null" >
        pool_id,
      </if>
      <if test="isSmall != null" >
        is_small,
      </if>
      <if test="idealMemoryKb != null" >
        ideal_memory_kb,
      </if>
      <if test="planHandle != null" >
        plan_handle,
      </if>
      <if test="sqlHandle != null" >
        sql_handle,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sessionId != null" >
        #{sessionId,jdbcType=SMALLINT},
      </if>
      <if test="requestId != null" >
        #{requestId,jdbcType=INTEGER},
      </if>
      <if test="schedulerId != null" >
        #{schedulerId,jdbcType=INTEGER},
      </if>
      <if test="dop != null" >
        #{dop,jdbcType=SMALLINT},
      </if>
      <if test="requestTime != null" >
        #{requestTime,jdbcType=TIMESTAMP},
      </if>
      <if test="grantTime != null" >
        #{grantTime,jdbcType=TIMESTAMP},
      </if>
      <if test="requestedMemoryKb != null" >
        #{requestedMemoryKb,jdbcType=BIGINT},
      </if>
      <if test="grantedMemoryKb != null" >
        #{grantedMemoryKb,jdbcType=BIGINT},
      </if>
      <if test="requiredMemoryKb != null" >
        #{requiredMemoryKb,jdbcType=BIGINT},
      </if>
      <if test="usedMemoryKb != null" >
        #{usedMemoryKb,jdbcType=BIGINT},
      </if>
      <if test="maxUsedMemoryKb != null" >
        #{maxUsedMemoryKb,jdbcType=BIGINT},
      </if>
      <if test="queryCost != null" >
        #{queryCost,jdbcType=DOUBLE},
      </if>
      <if test="timeoutSec != null" >
        #{timeoutSec,jdbcType=INTEGER},
      </if>
      <if test="resourceSemaphoreId != null" >
        #{resourceSemaphoreId,jdbcType=SMALLINT},
      </if>
      <if test="queueId != null" >
        #{queueId,jdbcType=SMALLINT},
      </if>
      <if test="waitOrder != null" >
        #{waitOrder,jdbcType=INTEGER},
      </if>
      <if test="isNextCandidate != null" >
        #{isNextCandidate,jdbcType=BIT},
      </if>
      <if test="waitTimeMs != null" >
        #{waitTimeMs,jdbcType=BIGINT},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="poolId != null" >
        #{poolId,jdbcType=INTEGER},
      </if>
      <if test="isSmall != null" >
        #{isSmall,jdbcType=BIT},
      </if>
      <if test="idealMemoryKb != null" >
        #{idealMemoryKb,jdbcType=BIGINT},
      </if>
      <if test="planHandle != null" >
        #{planHandle,jdbcType=VARBINARY},
      </if>
      <if test="sqlHandle != null" >
        #{sqlHandle,jdbcType=VARBINARY},
      </if>
    </trim>
  </insert>
</mapper>