<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.dlut.ssdut.abilityfosterplatform.mapper.DmExecCursorsMapper" >
  <resultMap id="BaseResultMap" type="edu.dlut.ssdut.abilityfosterplatform.model.DmExecCursors" >
    <result column="session_id" property="sessionId" jdbcType="INTEGER" />
    <result column="cursor_id" property="cursorId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="NVARCHAR" />
    <result column="properties" property="properties" jdbcType="NVARCHAR" />
    <result column="statement_start_offset" property="statementStartOffset" jdbcType="INTEGER" />
    <result column="statement_end_offset" property="statementEndOffset" jdbcType="INTEGER" />
    <result column="plan_generation_num" property="planGenerationNum" jdbcType="BIGINT" />
    <result column="creation_time" property="creationTime" jdbcType="TIMESTAMP" />
    <result column="is_open" property="isOpen" jdbcType="BIT" />
    <result column="is_async_population" property="isAsyncPopulation" jdbcType="BIT" />
    <result column="is_close_on_commit" property="isCloseOnCommit" jdbcType="BIT" />
    <result column="fetch_status" property="fetchStatus" jdbcType="INTEGER" />
    <result column="fetch_buffer_size" property="fetchBufferSize" jdbcType="INTEGER" />
    <result column="fetch_buffer_start" property="fetchBufferStart" jdbcType="INTEGER" />
    <result column="ansi_position" property="ansiPosition" jdbcType="INTEGER" />
    <result column="worker_time" property="workerTime" jdbcType="BIGINT" />
    <result column="reads" property="reads" jdbcType="BIGINT" />
    <result column="writes" property="writes" jdbcType="BIGINT" />
    <result column="dormant_duration" property="dormantDuration" jdbcType="BIGINT" />
    <result column="statement_context_id" property="statementContextId" jdbcType="BIGINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="edu.dlut.ssdut.abilityfosterplatform.model.DmExecCursorsWithBLOBs" extends="BaseResultMap" >
    <result column="sql_handle" property="sqlHandle" jdbcType="VARBINARY" />
    <result column="statement_sql_handle" property="statementSqlHandle" jdbcType="VARBINARY" />
  </resultMap>
  <sql id="Blob_Column_List" >
    sql_handle, statement_sql_handle
  </sql>
  <insert id="insert" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.DmExecCursorsWithBLOBs" >
    insert into dm_exec_cursors (session_id, cursor_id, name, 
      properties, statement_start_offset, statement_end_offset, 
      plan_generation_num, creation_time, is_open, 
      is_async_population, is_close_on_commit, fetch_status, 
      fetch_buffer_size, fetch_buffer_start, ansi_position, 
      worker_time, reads, writes, 
      dormant_duration, statement_context_id, sql_handle, 
      statement_sql_handle)
    values (#{sessionId,jdbcType=INTEGER}, #{cursorId,jdbcType=INTEGER}, #{name,jdbcType=NVARCHAR}, 
      #{properties,jdbcType=NVARCHAR}, #{statementStartOffset,jdbcType=INTEGER}, #{statementEndOffset,jdbcType=INTEGER}, 
      #{planGenerationNum,jdbcType=BIGINT}, #{creationTime,jdbcType=TIMESTAMP}, #{isOpen,jdbcType=BIT}, 
      #{isAsyncPopulation,jdbcType=BIT}, #{isCloseOnCommit,jdbcType=BIT}, #{fetchStatus,jdbcType=INTEGER}, 
      #{fetchBufferSize,jdbcType=INTEGER}, #{fetchBufferStart,jdbcType=INTEGER}, #{ansiPosition,jdbcType=INTEGER}, 
      #{workerTime,jdbcType=BIGINT}, #{reads,jdbcType=BIGINT}, #{writes,jdbcType=BIGINT}, 
      #{dormantDuration,jdbcType=BIGINT}, #{statementContextId,jdbcType=BIGINT}, #{sqlHandle,jdbcType=VARBINARY}, 
      #{statementSqlHandle,jdbcType=VARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.DmExecCursorsWithBLOBs" >
    insert into dm_exec_cursors
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sessionId != null" >
        session_id,
      </if>
      <if test="cursorId != null" >
        cursor_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="properties != null" >
        properties,
      </if>
      <if test="statementStartOffset != null" >
        statement_start_offset,
      </if>
      <if test="statementEndOffset != null" >
        statement_end_offset,
      </if>
      <if test="planGenerationNum != null" >
        plan_generation_num,
      </if>
      <if test="creationTime != null" >
        creation_time,
      </if>
      <if test="isOpen != null" >
        is_open,
      </if>
      <if test="isAsyncPopulation != null" >
        is_async_population,
      </if>
      <if test="isCloseOnCommit != null" >
        is_close_on_commit,
      </if>
      <if test="fetchStatus != null" >
        fetch_status,
      </if>
      <if test="fetchBufferSize != null" >
        fetch_buffer_size,
      </if>
      <if test="fetchBufferStart != null" >
        fetch_buffer_start,
      </if>
      <if test="ansiPosition != null" >
        ansi_position,
      </if>
      <if test="workerTime != null" >
        worker_time,
      </if>
      <if test="reads != null" >
        reads,
      </if>
      <if test="writes != null" >
        writes,
      </if>
      <if test="dormantDuration != null" >
        dormant_duration,
      </if>
      <if test="statementContextId != null" >
        statement_context_id,
      </if>
      <if test="sqlHandle != null" >
        sql_handle,
      </if>
      <if test="statementSqlHandle != null" >
        statement_sql_handle,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sessionId != null" >
        #{sessionId,jdbcType=INTEGER},
      </if>
      <if test="cursorId != null" >
        #{cursorId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=NVARCHAR},
      </if>
      <if test="properties != null" >
        #{properties,jdbcType=NVARCHAR},
      </if>
      <if test="statementStartOffset != null" >
        #{statementStartOffset,jdbcType=INTEGER},
      </if>
      <if test="statementEndOffset != null" >
        #{statementEndOffset,jdbcType=INTEGER},
      </if>
      <if test="planGenerationNum != null" >
        #{planGenerationNum,jdbcType=BIGINT},
      </if>
      <if test="creationTime != null" >
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isOpen != null" >
        #{isOpen,jdbcType=BIT},
      </if>
      <if test="isAsyncPopulation != null" >
        #{isAsyncPopulation,jdbcType=BIT},
      </if>
      <if test="isCloseOnCommit != null" >
        #{isCloseOnCommit,jdbcType=BIT},
      </if>
      <if test="fetchStatus != null" >
        #{fetchStatus,jdbcType=INTEGER},
      </if>
      <if test="fetchBufferSize != null" >
        #{fetchBufferSize,jdbcType=INTEGER},
      </if>
      <if test="fetchBufferStart != null" >
        #{fetchBufferStart,jdbcType=INTEGER},
      </if>
      <if test="ansiPosition != null" >
        #{ansiPosition,jdbcType=INTEGER},
      </if>
      <if test="workerTime != null" >
        #{workerTime,jdbcType=BIGINT},
      </if>
      <if test="reads != null" >
        #{reads,jdbcType=BIGINT},
      </if>
      <if test="writes != null" >
        #{writes,jdbcType=BIGINT},
      </if>
      <if test="dormantDuration != null" >
        #{dormantDuration,jdbcType=BIGINT},
      </if>
      <if test="statementContextId != null" >
        #{statementContextId,jdbcType=BIGINT},
      </if>
      <if test="sqlHandle != null" >
        #{sqlHandle,jdbcType=VARBINARY},
      </if>
      <if test="statementSqlHandle != null" >
        #{statementSqlHandle,jdbcType=VARBINARY},
      </if>
    </trim>
  </insert>
</mapper>