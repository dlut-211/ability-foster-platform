<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.dlut.ssdut.abilityfosterplatform.mapper.DmBrokerConnectionsMapper" >
  <resultMap id="BaseResultMap" type="edu.dlut.ssdut.abilityfosterplatform.model.DmBrokerConnections" >
    <result column="connection_id" property="connectionId" jdbcType="CHAR" />
    <result column="transport_stream_id" property="transportStreamId" jdbcType="CHAR" />
    <result column="state" property="state" jdbcType="SMALLINT" />
    <result column="state_desc" property="stateDesc" jdbcType="NVARCHAR" />
    <result column="connect_time" property="connectTime" jdbcType="TIMESTAMP" />
    <result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
    <result column="authentication_method" property="authenticationMethod" jdbcType="NVARCHAR" />
    <result column="principal_name" property="principalName" jdbcType="NVARCHAR" />
    <result column="remote_user_name" property="remoteUserName" jdbcType="NVARCHAR" />
    <result column="last_activity_time" property="lastActivityTime" jdbcType="TIMESTAMP" />
    <result column="is_accept" property="isAccept" jdbcType="BIT" />
    <result column="login_state" property="loginState" jdbcType="SMALLINT" />
    <result column="login_state_desc" property="loginStateDesc" jdbcType="NVARCHAR" />
    <result column="peer_certificate_id" property="peerCertificateId" jdbcType="INTEGER" />
    <result column="encryption_algorithm" property="encryptionAlgorithm" jdbcType="SMALLINT" />
    <result column="encryption_algorithm_desc" property="encryptionAlgorithmDesc" jdbcType="NVARCHAR" />
    <result column="receives_posted" property="receivesPosted" jdbcType="SMALLINT" />
    <result column="is_receive_flow_controlled" property="isReceiveFlowControlled" jdbcType="BIT" />
    <result column="sends_posted" property="sendsPosted" jdbcType="SMALLINT" />
    <result column="is_send_flow_controlled" property="isSendFlowControlled" jdbcType="BIT" />
    <result column="total_bytes_sent" property="totalBytesSent" jdbcType="BIGINT" />
    <result column="total_bytes_received" property="totalBytesReceived" jdbcType="BIGINT" />
    <result column="total_fragments_sent" property="totalFragmentsSent" jdbcType="BIGINT" />
    <result column="total_fragments_received" property="totalFragmentsReceived" jdbcType="BIGINT" />
    <result column="total_sends" property="totalSends" jdbcType="BIGINT" />
    <result column="total_receives" property="totalReceives" jdbcType="BIGINT" />
    <result column="peer_arbitration_id" property="peerArbitrationId" jdbcType="CHAR" />
  </resultMap>
  <insert id="insert" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.DmBrokerConnections" >
    insert into dm_broker_connections (connection_id, transport_stream_id, state, 
      state_desc, connect_time, login_time, 
      authentication_method, principal_name, 
      remote_user_name, last_activity_time, is_accept, 
      login_state, login_state_desc, peer_certificate_id, 
      encryption_algorithm, encryption_algorithm_desc, 
      receives_posted, is_receive_flow_controlled, sends_posted, 
      is_send_flow_controlled, total_bytes_sent, total_bytes_received, 
      total_fragments_sent, total_fragments_received, 
      total_sends, total_receives, peer_arbitration_id
      )
    values (#{connectionId,jdbcType=CHAR}, #{transportStreamId,jdbcType=CHAR}, #{state,jdbcType=SMALLINT}, 
      #{stateDesc,jdbcType=NVARCHAR}, #{connectTime,jdbcType=TIMESTAMP}, #{loginTime,jdbcType=TIMESTAMP}, 
      #{authenticationMethod,jdbcType=NVARCHAR}, #{principalName,jdbcType=NVARCHAR}, 
      #{remoteUserName,jdbcType=NVARCHAR}, #{lastActivityTime,jdbcType=TIMESTAMP}, #{isAccept,jdbcType=BIT}, 
      #{loginState,jdbcType=SMALLINT}, #{loginStateDesc,jdbcType=NVARCHAR}, #{peerCertificateId,jdbcType=INTEGER}, 
      #{encryptionAlgorithm,jdbcType=SMALLINT}, #{encryptionAlgorithmDesc,jdbcType=NVARCHAR}, 
      #{receivesPosted,jdbcType=SMALLINT}, #{isReceiveFlowControlled,jdbcType=BIT}, #{sendsPosted,jdbcType=SMALLINT}, 
      #{isSendFlowControlled,jdbcType=BIT}, #{totalBytesSent,jdbcType=BIGINT}, #{totalBytesReceived,jdbcType=BIGINT}, 
      #{totalFragmentsSent,jdbcType=BIGINT}, #{totalFragmentsReceived,jdbcType=BIGINT}, 
      #{totalSends,jdbcType=BIGINT}, #{totalReceives,jdbcType=BIGINT}, #{peerArbitrationId,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.dlut.ssdut.abilityfosterplatform.model.DmBrokerConnections" >
    insert into dm_broker_connections
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="connectionId != null" >
        connection_id,
      </if>
      <if test="transportStreamId != null" >
        transport_stream_id,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="stateDesc != null" >
        state_desc,
      </if>
      <if test="connectTime != null" >
        connect_time,
      </if>
      <if test="loginTime != null" >
        login_time,
      </if>
      <if test="authenticationMethod != null" >
        authentication_method,
      </if>
      <if test="principalName != null" >
        principal_name,
      </if>
      <if test="remoteUserName != null" >
        remote_user_name,
      </if>
      <if test="lastActivityTime != null" >
        last_activity_time,
      </if>
      <if test="isAccept != null" >
        is_accept,
      </if>
      <if test="loginState != null" >
        login_state,
      </if>
      <if test="loginStateDesc != null" >
        login_state_desc,
      </if>
      <if test="peerCertificateId != null" >
        peer_certificate_id,
      </if>
      <if test="encryptionAlgorithm != null" >
        encryption_algorithm,
      </if>
      <if test="encryptionAlgorithmDesc != null" >
        encryption_algorithm_desc,
      </if>
      <if test="receivesPosted != null" >
        receives_posted,
      </if>
      <if test="isReceiveFlowControlled != null" >
        is_receive_flow_controlled,
      </if>
      <if test="sendsPosted != null" >
        sends_posted,
      </if>
      <if test="isSendFlowControlled != null" >
        is_send_flow_controlled,
      </if>
      <if test="totalBytesSent != null" >
        total_bytes_sent,
      </if>
      <if test="totalBytesReceived != null" >
        total_bytes_received,
      </if>
      <if test="totalFragmentsSent != null" >
        total_fragments_sent,
      </if>
      <if test="totalFragmentsReceived != null" >
        total_fragments_received,
      </if>
      <if test="totalSends != null" >
        total_sends,
      </if>
      <if test="totalReceives != null" >
        total_receives,
      </if>
      <if test="peerArbitrationId != null" >
        peer_arbitration_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="connectionId != null" >
        #{connectionId,jdbcType=CHAR},
      </if>
      <if test="transportStreamId != null" >
        #{transportStreamId,jdbcType=CHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=SMALLINT},
      </if>
      <if test="stateDesc != null" >
        #{stateDesc,jdbcType=NVARCHAR},
      </if>
      <if test="connectTime != null" >
        #{connectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="authenticationMethod != null" >
        #{authenticationMethod,jdbcType=NVARCHAR},
      </if>
      <if test="principalName != null" >
        #{principalName,jdbcType=NVARCHAR},
      </if>
      <if test="remoteUserName != null" >
        #{remoteUserName,jdbcType=NVARCHAR},
      </if>
      <if test="lastActivityTime != null" >
        #{lastActivityTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isAccept != null" >
        #{isAccept,jdbcType=BIT},
      </if>
      <if test="loginState != null" >
        #{loginState,jdbcType=SMALLINT},
      </if>
      <if test="loginStateDesc != null" >
        #{loginStateDesc,jdbcType=NVARCHAR},
      </if>
      <if test="peerCertificateId != null" >
        #{peerCertificateId,jdbcType=INTEGER},
      </if>
      <if test="encryptionAlgorithm != null" >
        #{encryptionAlgorithm,jdbcType=SMALLINT},
      </if>
      <if test="encryptionAlgorithmDesc != null" >
        #{encryptionAlgorithmDesc,jdbcType=NVARCHAR},
      </if>
      <if test="receivesPosted != null" >
        #{receivesPosted,jdbcType=SMALLINT},
      </if>
      <if test="isReceiveFlowControlled != null" >
        #{isReceiveFlowControlled,jdbcType=BIT},
      </if>
      <if test="sendsPosted != null" >
        #{sendsPosted,jdbcType=SMALLINT},
      </if>
      <if test="isSendFlowControlled != null" >
        #{isSendFlowControlled,jdbcType=BIT},
      </if>
      <if test="totalBytesSent != null" >
        #{totalBytesSent,jdbcType=BIGINT},
      </if>
      <if test="totalBytesReceived != null" >
        #{totalBytesReceived,jdbcType=BIGINT},
      </if>
      <if test="totalFragmentsSent != null" >
        #{totalFragmentsSent,jdbcType=BIGINT},
      </if>
      <if test="totalFragmentsReceived != null" >
        #{totalFragmentsReceived,jdbcType=BIGINT},
      </if>
      <if test="totalSends != null" >
        #{totalSends,jdbcType=BIGINT},
      </if>
      <if test="totalReceives != null" >
        #{totalReceives,jdbcType=BIGINT},
      </if>
      <if test="peerArbitrationId != null" >
        #{peerArbitrationId,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
</mapper>